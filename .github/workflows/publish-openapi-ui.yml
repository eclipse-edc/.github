name: publish swagger ui

on:
  workflow_call:

jobs:
  generate-openapi-spec:
    runs-on: ubuntu-latest
    outputs:
      api_groups: ${{ steps.outputStep.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: eclipse-edc/.github/.github/actions/setup-build@main
      - name: Generate API Specs
        run: ./gradlew resolve
      - uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: resources/openapi/yaml
      - name: get api groups and create matrix for next job
        id: outputStep
        run: |
          if test -d resources/openapi/yaml; then
            API_GROUPS_ARRAY=$(ls -l resources/openapi/yaml | grep '^d' | awk '{print $9}' | sed ':a; N; $!ba; s/\n/","/g' | sed 's/.*/["&"]/')
            echo "matrix={\"apiGroup\": ${API_GROUPS_ARRAY}}" >> $GITHUB_OUTPUT
          fi

  generate-swagger-ui:
    if: ${{ needs.generate-openapi-spec.outputs.api_groups != '' }}
    needs: generate-openapi-spec
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-openapi-spec.outputs.api_groups) }}
    env:
      rootDir: resources/openapi/yaml/${{ matrix.apiGroup }}
      versionFile: resources/openapi/${{ matrix.apiGroup }}.version
    steps:
      - uses: actions/checkout@v4
      - uses: eclipse-edc/.github/.github/actions/setup-build@main
      - uses: actions/download-artifact@v4
        with:
          name: openapi-spec
          path: resources/openapi/yaml

      - name: Set VERSION environment variable
        run: |
          if [ -f ${{ env.versionFile }} ]; then
            VERSION=$(cat ${{ env.versionFile }} | xargs cat | jq '.[] | select(.maturity=="stable" or .maturity==null) | .version' | cut -d '"' -f 2)
            echo "${{ matrix.apiGroup }} file found. Version: $VERSION"
          else
            VERSION=$(grep version= gradle.properties | cut -c 9-)
            echo "No version.json file found for ${{ matrix.apiGroup }} api context. Project version $VERSION will be used"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Generate API Specs
        run: |
          ./gradlew -Pversion=${{ env.VERSION }} -PapiTitle="${{ matrix.apiGroup }}" -PapiDescription="REST API documentation for the ${{ matrix.apiGroup }}" :mergeApiSpec --input=${{ env.rootDir }} --output=${{ matrix.apiGroup }}.yaml

      - name: Generate Swagger UI current version
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui/${{ env.VERSION }}
          spec-file: ${{ matrix.apiGroup }}.yaml

      - name: Generate Swagger UI stable version
        uses: Legion2/swagger-ui-action@v1
        if: ${{ !endsWith( env.VERSION, '-SNAPSHOT') }}
        with:
          output: swagger-ui
          spec-file: ${{ matrix.apiGroup }}.yaml

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.apiGroup }}
          path: swagger-ui

  deploy-swagger-ui:
    needs: generate-swagger-ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: openapi
          pattern: "*-api"
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          keep_files: true
