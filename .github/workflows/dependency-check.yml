name: 'Dependency Review'
on:
  workflow_call:

jobs:
  Review-Allowed-Licenses:
    runs-on: ubuntu-latest
    continue-on-error: false
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
    steps:
      - uses: actions/checkout@v4
      - name: 'Check Allowed Licenses'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical
          # Representation of this list: https://www.eclipse.org/legal/licenses.php#
          # Expressed with the help of the following IDs: https://spdx.org/licenses/
          allow-licenses: >-
            Adobe-Glyph, Apache-1.0, Apache-1.1, Apache-2.0, Artistic-2.0, BSD-2-Clause, BSD-3-Clause,
            BSD-4-Clause, 0BSD, BSL-1.0, CDDL-1.0, CDDL-1.1, CPL-1.0, CC-BY-3.0, CC-BY-4.0, CC-BY-2.5,
            CC-BY-SA-3.0, CC-BY-SA-4.0, CC0-1.0, EPL-1.0, EPL-2.0, FTL, GFDL-1.3-only, IPL-1.0, ISC,
            MIT, MIT-0, MPL-1.1, MPL-2.0, NTP, OpenSSL, PHP-3.01, PostgreSQL, OFL-1.1, Unlicense,
            Unicode-DFS-2015, Unicode-DFS-2016, Unicode-TOU, UPL-1.0, W3C-20150513, W3C-19980720, W3C,
            WTFPL, X11, Zlib, ZPL-2.1

  Dash-Verify-Licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORG_GITHUB_BOT_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref_name }}
      - uses: eclipse-edc/.github/.github/actions/setup-build@main
      - name: Download latest Eclipse Dash
        run: |
          curl -L https://repo.eclipse.org/service/local/artifact/maven/redirect\?r\=dash-licenses\&g\=org.eclipse.dash\&a\=org.eclipse.dash.licenses\&v\=LATEST --output dash.jar
      - name: Regenerate DEPENDENCIES
        run: |
          # dash returns a nonzero exit code if there are libs that need review. the "|| true" avoids that
          ./gradlew allDependencies | grep -Poh "(?<=\s)[\w.-]+:[\w.-]+:[^:\s\[\]]+" | sort | uniq | java -jar dash.jar - -summary DEPENDENCIES-gen || true

          # error if DEPENDENCIES is empty
          grep -E 'maven' DEPENDENCIES-gen | if test $(wc -l) -lt 1; then
            echo "::error file=DEPENDENCIES-gen,title=Dependencies file is corrupted, please run the workflow again"
            exit 1
          fi

          # log warning if restricted deps are found
          grep -E 'restricted' DEPENDENCIES-gen | if test $(wc -l) -gt 0; then
            echo "::warning file=DEPENDENCIES,title=Restricted Dependencies found::Some dependencies are marked 'restricted' - please review them"
          fi

          # log error and fail job if rejected deps are found
          grep -E 'rejected' DEPENDENCIES-gen | if test $(wc -l) -gt 0; then
            echo "::error file=DEPENDENCIES,title=Rejected Dependencies found::Some dependencies are marked 'rejected', they cannot be used"
            exit 1
          fi

      - name: choose post behavior
        run: |
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          if [[ "$BRANCH_NAME" == "dependabot/gradle/"* ]]; then
            echo "BEHAVIOR=COMMIT" >> $GITHUB_ENV
          else
            echo "BEHAVIOR=CHECK" >> $GITHUB_ENV
          fi

      - name: Check for differences
        if: ${{ env.BEHAVIOR == 'CHECK' }}
        run: |
          if diff DEPENDENCIES DEPENDENCIES-gen ; then
            echo "DEPENDENCIES up-do-date"
          else
            diff DEPENDENCIES DEPENDENCIES-gen || true
            echo "------------------------------------------------------------"
            echo "=== Please copy the following content back to DEPENDENCIES ==="
            cat DEPENDENCIES-gen
            echo "=== end of content ==="
            echo "::error file=DEPENDENCIES,title=Dependencies outdated::The DEPENDENCIES file was outdated and must be regenerated. Check the output of this job for more information"
            exit 1
          fi

      - name: Update DEPENDENCIES on dependabot branches
        if: ${{ env.BEHAVIOR == 'COMMIT' }}
        run: |
          if diff DEPENDENCIES DEPENDENCIES-gen ; then
            echo "DEPENDENCIES is already updated, no need to commit"
          else
            mv DEPENDENCIES-gen DEPENDENCIES
            
            git config user.name "eclipse-edc-bot"
            git config user.email "edc-bot@eclipse.org"
            
            git add DEPENDENCIES
            git commit --message "update dependencies [skip dependabot]"
            git push
          fi
