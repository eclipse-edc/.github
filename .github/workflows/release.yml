name: Release

on:
  workflow_call:
    inputs:
      test-tag-exclusions:
        description: specific test tags separated by comma (,) that are not supposed to run in the standard test suite can be excluded
        type: string
        required: false
      publish-autodoc:
        type: boolean
        description: whether publish autodoc or not
        default: false

jobs:

  Release:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.set-tag.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4

      - id: set-version
        run: |
          VERSION=$(echo ${{ github.ref_name }} | cut -d '/' -f 2)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - uses: eclipse-edc/.github/.github/actions/set-project-version@main
        with:
          version: ${{ steps.set-version.outputs.VERSION }}

      - name: Replace published DEPENDENCIES file link in NOTICE with the one just created
        run: sed -i "s#\[DEPENDENCIES\]\(.*\)#\[DEPENDENCIES\]\(DEPENDENCIES\)#g" NOTICE.md

      - uses: eclipse-edc/.github/.github/actions/generate-dependencies-file@main
        with:
          run: strict

      - run: ./gradlew compileJava build -DrunAllTests=true -DexcludeTags=${{ inputs.test-tag-exclusions }}

      - uses: eclipse-edc/.github/.github/actions/publish-maven-artifacts@main
        with:
          gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.ORG_GPG_PASSPHRASE }}
          username: ${{ secrets.CENTRAL_SONATYPE_TOKEN_USERNAME }}
          password: ${{ secrets.CENTRAL_SONATYPE_TOKEN_PASSWORD }}

      - shell: bash
        id: set-tag
        run: |
          git config user.name "eclipse-edc-bot"
          git config user.email "edc-bot@eclipse.org"

          TAG=v${{ steps.set-version.outputs.VERSION }}

          git add .
          git diff-index --quiet HEAD || git commit -m "Release Version $TAG" 

          git tag $TAG
          git push --atomic origin ${{ github.ref_name }} $TAG

          echo "TAG=$TAG" >> $GITHUB_OUTPUT

  Create-GitHub-Release:
    needs: [ Release ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          tag: ${{ needs.Release.outputs.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          removeArtifacts: true

  Publish-Autodoc:
    if: inputs.publish-autodoc == true
    needs: [ Release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - uses: eclipse-edc/.github/.github/actions/publish-autodoc@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  Wait-For-Published-Artifact:
    needs: [ Release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - uses: eclipse-edc/.github/.github/actions/setup-build@main
      - run: ./gradlew waitForPublishedArtifacts

  Post-To-Discord:
    needs: [ Release, Create-GitHub-Release ]
    if: "always()"
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        name: "Invoke discord webhook"
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CI_WEBHOOK }}
          # if the publishing is skipped, that means the preceding test run failed
          status: ${{ needs.Release.result }}
          title: "Release ${{ github.repository }} ${{ needs.Release.outputs.TAG }}"
          username: GitHub Actions

