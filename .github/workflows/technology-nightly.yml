name: Nightly

on:
  workflow_call:
    inputs:
      version:
        description: Semantic Version string to use for this nightly build. It should ends with `-SNAPSHOT`. If not, please take a look at the release workflow.
        required: false
        type: string

jobs:

  Secrets-Presence:
    if: always()
    name: "Check for required credentials"
    runs-on: ubuntu-latest
    outputs:
      HAS_OSSRH: ${{ steps.secrets-presence.outputs.HAS_OSSRH }}
      HAS_WEBHOOK: ${{ steps.secrets-presence.outputs.HAS_WEBHOOK }}
    steps:
      - name: Check whether secrets exist
        id: secrets-presence
        run: |
          [ ! -z "${{ secrets.ORG_GPG_PASSPHRASE }}" ] &&
          [ ! -z "${{ secrets.ORG_GPG_PRIVATE_KEY }}" ] &&
          [ ! -z "${{ secrets.ORG_OSSRH_USERNAME }}" ] && echo "HAS_OSSRH=true" >> $GITHUB_OUTPUT
          [ ! -z "${{ secrets.DISCORD_GITHUB_CI_WEBHOOK }}" ] && echo "HAS_WEBHOOK=true" >> $GITHUB_OUTPUT
          exit 0

  Determine-Version:
    if: always()
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get-version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: "Get version"
        id: get-version
        run: |
          if [ -z ${{ inputs.version }} ]; then
            echo "VERSION=$(IFS=.- read -r RELEASE_VERSION_MAJOR RELEASE_VERSION_MINOR RELEASE_VERSION_PATCH SNAPSHOT<<<$(grep "version" gradle.properties | awk -F= '{print $2}') && echo $RELEASE_VERSION_MAJOR.$RELEASE_VERSION_MINOR.$RELEASE_VERSION_PATCH-$(date +"%Y%m%d")-SNAPSHOT)" >> "$GITHUB_OUTPUT"
          else
            echo "VERSION=${{ inputs.version }}" >> "$GITHUB_OUTPUT"
          fi

  Publish-Artefacts:
    runs-on: ubuntu-latest
    needs: [ Secrets-Presence, Determine-Version ]
    if: |
      needs.Secrets-Presence.outputs.HAS_OSSRH
    steps:
      - uses: eclipse-edc/.github/.github/actions/publish-maven-artifacts@main
        with:
          version: ${{ needs.Determine-Version.outputs.VERSION }}
          gpg-private-key: ${{ secrets.ORG_GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.ORG_GPG_PASSPHRASE }}
          osshr-username: ${{ secrets.ORG_OSSRH_USERNAME }}
          osshr-password: ${{ secrets.ORG_OSSRH_PASSWORD }}

  Post-To-Discord:
    needs: [ Publish-Artefacts, Determine-Version, Secrets-Presence ]
    if: "needs.Secrets-Presence.outputs.HAS_WEBHOOK && always()"
    runs-on: ubuntu-latest
    steps:
      - uses: sarisia/actions-status-discord@v1
        name: "Invoke discord webhook"
        with:
          webhook: ${{ secrets.DISCORD_GITHUB_CI_WEBHOOK }}
          # if the publishing is skipped, that means the preceding test run failed
          status: ${{ needs.Publish-Artefacts.result == 'skipped' && 'Failure' || needs.Publish-Artefacts.result }}
          title: "Nightly ${{ github.repository }} build"
          description: "Build and publish ${{ needs.Determine-Version.outputs.VERSION }}"
          username: GitHub Actions
